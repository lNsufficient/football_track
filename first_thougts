Tankar:
Bollen är innanför planen. 
  Hitta planens kanter och hörn: linjedetetktion (ransac?)
  Homografi för att se planen ovanifrån,
  Sett ovanifrån kanske bildanalys är lättare,
    Problem då bollen är i luften, då kan den se ut att vara utanför planen
    Vi börjar med enkla fallet att bollen är på marken
    Eventuellt gå vidare till då bollen är innanför planen (trots att den flyger). 
    
    
    
Detektion av bollen:
  Hur många bilder per sekund? Framerate: 25 = 25 fps
  Hur fort kan en boll röra sig? 64 m/s. Alltså, mellan två bilder kan den ha rört sig som mest 2.56 meter.
    Påverkas detta av perspektiv, alltså att den kan se ut att gå forta
  Kolla fördelningen av intensitet i någon punkt på planen (ha något tröskelvärde för intressanta förändringar)
    Detta ger apriori-distribution för någon pixel, 
    Kolla på storlek hos förändringar (convolutions?)
  Bollen kanske är där spelare är brevid varandra. 
  Kan man helt enkelt skapa ett neuralt nätverk som gör hela grejen? 
    http://danielnouri.org/notes/2014/12/17/using-convolutional-neural-nets-to-detect-facial-keypoints-tutorial/
  
Generell plan:
  Hitta bollen med hjälp av radialt filter /faltning med boll (hitta waldo) - olika bollar får användas här
    Använda olika bollar på olika ställen i planen?
    Träna neuralt nätverk? 
    Klassifiera dessa kandidater med hjälp av www.robots.ox.ac.uk/~vgg/practicals/cnn/
  Alternativt träna ett nätverk för att hitta bollarna direkt, från den filtrerade/maskade bilden. 
  
  
  Förbättring av precision:
    Använd geometri för att beräkna bollens nästa position (kan max flyttas 2.5 meter).
    leta främst efter bollen kring denna punkt.
  
Problem:
  Bollen är nära en spelare
    Spelaren är i vägen, bollen ses ej
    Spelaren kan ändra på bollens rörelse. 
  

Vad har vi?: 
  Homografier för varje kamera till planet? 
  Homografier för kamera till varandra (till mittkameran)?
  Kameramatriser?
  Det fanns radial distortion ifrån början, men sedan försvann denna med hjälp av någon transformation. Är det då okej att bara räkna på pinhole camera.
  Hur var kamerorna placerade? Samma kamera center?
  
Första steg:
  CV:
    Givet kameraposition i flera bilder, gör beräkningar på hur den rör sig. Jämför med prediktion.
    Hur ser homografi ut för 

Vad vi har gjort:
  find waldo genom convolution - har bara testat med bilder ifrån samma bild. Kan funka, men vi borde testa från andra bilder i närheten.
    det kanske behövs några exempelbollar från olika områden på planen. 
  Skapat en funktion som returnerar huruvida en punkt är på eller utanför planen.
    Skapat en mask med hjälp av denna.
  Hittat homografi som ger planen sett ovanifrån 
    Denna kommer förmodligen inte användas för detektion av bollen, möjligtvis för att plotta bollens position efter att den hittats
      Detta kommer alltså inte hjälpa oss att hitta bollen, snarare att ge användaren information om bollen i efterhand. 
      Möjligtvis kommer det användas för att räkna på möjlig position i nästa bild. I så fall transformeras ENDAST bollens koordinater.
  Skapat ett testsett - i form av x, y-koordinater för ungefär 40 bilder, från de 60 första sekunderna i matchen.
    De rör sig på ganska många delar av planen.
  Läst på lite om CNN (matconvnet-1.0-beta24)
    Antingen använda för klassifiering av rimliga punkter
    Hitta 3d-koordinat direkt - vad händer i så fall om vi INTE shufflar bilderna då vi tränar datan, kommer den kanske få tidsinformation då?
  Testat segmentera med kmeans square - inte så bra.
  Testat att använda edge - kan vara användbart (bollen blev en sammanhängade "cirkel")
  Jobbat med idéer
    Avståndsbedömning med hjälp av kameramatris
  
  
